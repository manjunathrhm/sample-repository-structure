name: Deploy IaC template

on:
  push:
    branches:
      - manin
  workflow_dispatch:

env:
  TF_VERSION: 1.5.0

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure/terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'rakshitha-mayya/sample-repository-structure'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: |
          {
              "clientId": "de070d2e-ab18-41c5-bfa6-7cfb61136711",
              "clientSecret": "h.l8Q~npXw6iK42Bi1aQwzadnX.mdYERr~yYhcm4",
              "subscriptionId": "343c17eb-34b6-4481-92a2-a0a5a04bdd88",
              "tenantId": "99d624b9-55f3-4984-bb9a-28d58385162d",
              "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",
              "resourceManagerEndpointUrl": "https://management.azure.com/",
              "activeDirectoryGraphResourceId": "https://graph.windows.net/",
              "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",
              "galleryEndpointUrl": "https://gallery.azure.com/",
              "managementEndpointUrl": "https://management.core.windows.net/"
            }

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    # - name: Terraform Validate
    #   id: validate
    #   run: terraform validate -no-color

    # - name: Terraform Plan
    #   id: plan
    #   run: terraform plan -no-color -input=false
    #   continue-on-error: true

    # - name: Terraform Plan Status
    #   if: steps.plan.outcome == 'failure'
    #   run: exit 1

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve -input=false

    # - name: Terraform Destroy
    #   run: terraform destroy -auto-approve -input=false

    # - name: Get Terraform Outputs
    #   if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event.inputs.action == 'apply'
    #   id: outputs
    #   run: |
    #     echo "instance_id=$(terraform output -raw instance_id)" >> $GITHUB_OUTPUT
    #     echo "instance_public_ip=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT
    #     echo "ssh_command=$(terraform output -raw ssh_connection_command)" >> $GITHUB_OUTPUT
