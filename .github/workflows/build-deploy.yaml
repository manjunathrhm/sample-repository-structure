name: Build-Deployment

on:
  push:
    branches:
      - main

jobs:
  Image-build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Log in to ACR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build Docker image
      run: |
        CURRENT_TAG=$(echo $(git rev-parse --short HEAD))
        echo ${CURRENT_TAG}
        cd $PWD/application/node-k8s-app
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/nodejs-app:${CURRENT_TAG} .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/nodejs-app:${CURRENT_TAG}
      

    # - name: Build and push Docker image
    #   run: |
    #     cd $PWD/node-k8s-app
    #     docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/node-k8s-app:latest .
    
    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@0.28.0
    #   with:
    #     image-ref: 'rakshithamayya/nodejs-app:latest'
    #     output: trivy-report.json
    #     format: json
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH'
    #   continue-on-error: true

    # - name: Upload Vulnerability Scan Results
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: trivy-report
    #     path: trivy-report.json
    #     retention-days: 30
    
    # - name: Build and push Docker image
    #   run: |
    #     CURRENT_TAG=$(echo $(git rev-parse --short HEAD))
    #     echo ${CURRENT_TAG}
    #     cd $PWD/application/node-k8s-app
    #     docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/node-k8s-app:${CURRENT_TAG} .
    #     echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
        # docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-k8s-app:${CURRENT_TAG}
        # echo "${{ secrets.DOCKERHUB_USERNAME }}/node-k8s-app:${CURRENT_TAG} is pushed"

  kubeconform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubeconform
        run: |
          curl -L https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64.tar.gz | tar xz
          sudo mv kubeconform /usr/local/bin/

      - name: Validate manifests
        run: |
          kubeconform -strict -summary -output json $(find . -name '*.yaml')
        continue-on-error: true
          
  # Deploy:
  #   runs-on: self-hosted
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v2

  #   - name: deploy
  #     run: |
  #       kubectl apply -f application.yaml -n argocd
