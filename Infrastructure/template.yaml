
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: cloud-infra-and-app-deployment
  title: Cloud Infra & App Deployment
  description: Provision cloud infrastructure (AKS/EC2) and deploy application, then register in Backstage.
  tags:
    - backstage
    - cloud
    - terraform
    - github
spec:
  owner: platform-team
  type: service

  parameters:
    - title: Cloud Provider & Infra Inputs
      required:
        - clusterName
        - resourceGroup
        - clientId
        - clientSecret
        - tenantId
        - subscriptionId
      properties:
        clusterName:
          title: Cluster Name
          type: string
        resourceGroup:
          title: Resource Group Name
          type: string
        clientId:
          title: Azure Client ID
          type: string
        clientSecret:
          title: Azure Client Secret
          type: string
        tenantId:
          title: Azure Tenant ID
          type: string
        subscriptionId:
          title: Azure Subscription ID
          type: string
    - title: Repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-terraform
      name: Fetch Terraform code
      action: fetch:template
      input:
        url: ./Infrastructure
        targetPath: ./Infrastructure

    - id: terraform-init
      name: Terraform Init
      action: shell:exec
      input:
    workingDirectory: ./infra
    command: terraform init
- id: terraform-apply
  name: Terraform Apply
  action: shell:exec
  input:
    workingDirectory: ./infra
    command: >
      terraform apply -auto-approve
      -var "aks_cluster_name=${{ parameters.clusterName }}"
      -var "resource_group_name=${{ parameters.resourceGroup }}"
      -var "clientid=${{ parameters.clientId }}"
      -var "secretvalue=${{ parameters.clientSecret }}"
      -var "tenantid=${{ parameters.tenantId }}"
      -var "subscriptionid=${{ parameters.subscriptionId }}"

      
    - id: fetch-app
      name: Fetch App Skeleton
      action: fetch:template
      input:
        url: ./application/app-2
        targetPath: ./app-2

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        description: Application and infra deployed for ${{ parameters.clusterName }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register in Backstage Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Azure Portal
        url: https://portal.azure.com/#view/HubsExtension/BrowseResource/resourceType/Microsoft.ContainerService%2FmanagedClusters
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
